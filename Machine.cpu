<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="ANSHUMAN.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="OPCODE" type="required" numBits="16" relativity="absolute" signed="false" defaultValue="0" id="model.Field28ad3dce">
	</Field>
	<Field name="ADDR" type="required" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field28e7e49d">
	</Field>
	<Field name="OP" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field30d79697">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register2769b393" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register5f09420e" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register4b27fcfa" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register2a3961a3" />
	<Register name="H" width="1" initialValue="0" readOnly="false" id="model.module.Register4026ba5c" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register55aa8964" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register219e6f07" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register404b36ee" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register354a90e1" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register34aace85" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Register661e6940" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register7ffbcf2b" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="HALT" bit="0" register="model.module.Register4026ba5c" halt="true" id="model.module.ConditionBit1ed785ad" />

	<!--............. rams ..........................-->
	<RAM name="M" length="4096" cellSize="16" id="model.module.RAM7cebbe14" />

	<!--............. set ...........................-->
	<Set name="AC&lt;-0" register="model.module.Register2769b393" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet69d1a757" />
	<Set name="E&lt;-0" register="model.module.Register2a3961a3" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet24df7e6c" />
	<Set name="E&lt;-1" register="model.module.Register2a3961a3" start="0" numBits="1" value="1" id="model.microinstruction.CpusimSet59eac099" />

	<!--............. test ..........................-->
	<Test name="IF(AC&lt;0),PC&lt;-PC+1" register="model.module.Register2769b393" start="0" numBits="16" comparison="GE" value="0" omission="1" id="model.microinstruction.Test25cebd40" />
	<Test name="IF(AC=0),PC&lt;-PC+1" register="model.module.Register2769b393" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2aaf5f68" />
	<Test name="IF(AC&gt;0),PC&lt;-PC+1" register="model.module.Register2769b393" start="0" numBits="16" comparison="LE" value="0" omission="1" id="model.microinstruction.Test272ff879" />
	<Test name="IF(DR=0) " register="model.module.Register5f09420e" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test31877ad1" />
	<Test name="IF(E=0),PC&lt;-PC+1" register="model.module.Register2769b393" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test61f3e51c" />
	<Test name="if(DR=0),then PC=PC+1" register="model.module.Register4b27fcfa" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test3177a255" />
	<Test name="if(E=0),then E=1 " register="model.module.Register2a3961a3" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test69c36832" />

	<!--............. increment .....................-->
	<Increment name="AC&lt;-AC+1" register="model.module.Register2769b393" delta="1" id="model.microinstruction.Increment6398d629" />
	<Increment name="AR&lt;-AR+1" register="model.module.Register5f09420e" delta="1" id="model.microinstruction.Increment1dbd1443" />
	<Increment name="DR&lt;-DR+1" register="model.module.Register4b27fcfa" delta="1" id="model.microinstruction.Increment11d478ab" />
	<Increment name="PC&lt;-PC+1" register="model.module.Register34aace85" delta="1" id="model.microinstruction.Increment63a4005b" />

	<!--............. shift .........................-->
	<Shift name="AC&lt;-shl AC" type="logical" source="model.module.Register2769b393" destination="model.module.Register2769b393" direction="left" distance="1" id="model.microinstruction.Shift1e197e1" />
	<Shift name="AC&lt;-shr AC" type="logical" source="model.module.Register2769b393" destination="model.module.Register2769b393" direction="right" distance="1" id="model.microinstruction.Shift4284f95e" />

	<!--............. logical .......................-->
	<Logical name="AC&lt;-AC'" type="NOT" source1="model.module.Register2769b393" source2="model.module.Register2769b393" destination="model.module.Register2769b393" id="model.microinstruction.Logical6a4459fd" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="model.module.Register2769b393" source2="model.module.Register4b27fcfa" destination="model.module.Register2769b393" id="model.microinstruction.Logicalf6f13e2" />
	<Logical name="E&lt;-E'" type="NOT" source1="model.module.Register2a3961a3" source2="model.module.Register2a3961a3" destination="model.module.Register2a3961a3" id="model.microinstruction.Logical55b11074" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="model.module.Register2769b393" source2="model.module.Register4b27fcfa" destination="model.module.Register2769b393" id="model.microinstruction.Arithmetice5ea2bf" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC(0)&lt;-E" source="model.module.Register2a3961a3" srcStartBit="0" dest="model.module.Register2769b393" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6cf5e6ed" />
	<TransferRtoR name="AC(0-7)&lt;-INPR" source="model.module.Register219e6f07" srcStartBit="0" dest="model.module.Register2769b393" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR1745ea96" />
	<TransferRtoR name="AC(15)&lt;-E" source="model.module.Register2a3961a3" srcStartBit="0" dest="model.module.Register2769b393" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR3dbbe51f" />
	<TransferRtoR name="AC&lt;-DR" source="model.module.Register4b27fcfa" srcStartBit="0" dest="model.module.Register2769b393" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR5f53ca90" />
	<TransferRtoR name="AR&lt;-IR(0-11)" source="model.module.Register404b36ee" srcStartBit="0" dest="model.module.Register5f09420e" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR1cd28d19" />
	<TransferRtoR name="AR&lt;-PC" source="model.module.Register34aace85" srcStartBit="0" dest="model.module.Register5f09420e" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR24fbc54f" />
	<TransferRtoR name="E&lt;-AC(0)" source="model.module.Register2769b393" srcStartBit="0" dest="model.module.Register2a3961a3" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR460a4fd2" />
	<TransferRtoR name="E&lt;-AC(15)" source="model.module.Register2769b393" srcStartBit="15" dest="model.module.Register2a3961a3" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR7cc0ac9" />
	<TransferRtoR name="I&lt;-IR(15)" source="model.module.Register404b36ee" srcStartBit="15" dest="model.module.Register55aa8964" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoRffee56c" />
	<TransferRtoR name="OUTR&lt;-AC(0-7)" source="model.module.Register2769b393" srcStartBit="0" dest="model.module.Register354a90e1" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR75d58861" />
	<TransferRtoR name="PC&lt;-AR" source="model.module.Register5f09420e" srcStartBit="0" dest="model.module.Register34aace85" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR61b53dd6" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="Decode(IR)" ir="model.module.Register404b36ee" id="model.microinstruction.Decode272aa066" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HLT" bit="model.module.ConditionBit1ed785ad" value="1" id="model.microinstruction.SetCondBit6f3962d8" />

	<!--............. io ............................-->
	<IO name="INP" direction="input" type="integer" buffer="model.module.Register219e6f07" connection="[Console]" id="model.microinstruction.IOfdca046" />
	<IO name="OUT" direction="output" type="integer" buffer="model.module.Register354a90e1" connection="[Console]" id="model.microinstruction.IO2bd73cc7" />

	<!--............. memory access .................-->
	<MemoryAccess name="AR&lt;-M[AR]" direction="read" memory="model.module.RAM7cebbe14" data="model.module.Register5f09420e" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess5b33c83d" />
	<MemoryAccess name="DR&lt;-M[AR]" direction="read" memory="model.module.RAM7cebbe14" data="model.module.Register4b27fcfa" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess1ec1f2dd" />
	<MemoryAccess name="IR&lt;-M[AR]" direction="read" memory="model.module.RAM7cebbe14" data="model.module.Register404b36ee" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess7475afd3" />
	<MemoryAccess name="M[AR]&lt;-AC" direction="write" memory="model.module.RAM7cebbe14" data="model.module.Register2769b393" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess6656849e" />
	<MemoryAccess name="M[AR]&lt;-DR" direction="write" memory="model.module.RAM7cebbe14" data="model.module.Register4b27fcfa" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess2361ca49" />
	<MemoryAccess name="M[AR]&lt;-PC" direction="write" memory="model.module.RAM7cebbe14" data="model.module.Register34aace85" address="model.module.Register5f09420e" id="model.microinstruction.MemoryAccess32a793e2" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End6bf5a952" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR24fbc54f" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess7475afd3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1cd28d19" />
		<Microinstruction microRef="model.microinstruction.TransferRtoRffee56c" />
		<Microinstruction microRef="model.microinstruction.Decode272aa066" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="ISZ_I" opcode="e" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#c6aa95 #db96ae" assemblyColors="#c6aa95 #db96ae" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Increment11d478ab" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2361ca49" />
		<Microinstruction microRef="model.microinstruction.Test3177a255" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="BSA_I" opcode="d" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f691d3 #d586a3" assemblyColors="#f691d3 #d586a3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess32a793e2" />
		<Microinstruction microRef="model.microinstruction.Increment1dbd1443" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR61b53dd6" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="BUN_I" opcode="c" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#8ba2b0 #a8daf3" assemblyColors="#8ba2b0 #a8daf3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR61b53dd6" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="STA_I" opcode="b" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#e4a69e #a8d1a4" assemblyColors="#e4a69e #a8d1a4" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6656849e" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="LDA_I" opcode="a" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#d7c5d7 #aab0a4" assemblyColors="#d7c5d7 #aab0a4" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f53ca90" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="ADD_I" opcode="9" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#9bcbcb #e2a789" assemblyColors="#9bcbcb #e2a789" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Arithmetice5ea2bf" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="AND_I" opcode="8" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#efab83 #c2f2c9" assemblyColors="#efab83 #c2f2c9" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess5b33c83d" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Logicalf6f13e2" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="f400" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#f3a2e8" assemblyColors="#f3a2e8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d58861" />
		<Microinstruction microRef="model.microinstruction.IO2bd73cc7" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="f800" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#97f098" assemblyColors="#97f098" >
		<Microinstruction microRef="model.microinstruction.IOfdca046" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1745ea96" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="7001" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#8ca180" assemblyColors="#8ca180" >
		<Microinstruction microRef="model.microinstruction.SetCondBit6f3962d8" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="SZE" opcode="7002" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#84bf9b" assemblyColors="#84bf9b" >
		<Microinstruction microRef="model.microinstruction.Test61f3e51c" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="SZA" opcode="7004" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#808080" assemblyColors="#808080" >
		<Microinstruction microRef="model.microinstruction.Test2aaf5f68" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="SNA" opcode="7008" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#8d8e88" assemblyColors="#8d8e88" >
		<Microinstruction microRef="model.microinstruction.Test25cebd40" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="SPA" opcode="7010" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#eb9b93" assemblyColors="#eb9b93" >
		<Microinstruction microRef="model.microinstruction.Test272ff879" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="7020" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#8fc5e0" assemblyColors="#8fc5e0" >
		<Microinstruction microRef="model.microinstruction.Increment6398d629" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CIL" opcode="7040" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#80e2d9" assemblyColors="#80e2d9" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR7cc0ac9" />
		<Microinstruction microRef="model.microinstruction.Shift1e197e1" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6cf5e6ed" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CIR" opcode="7080" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#d8f4f3" assemblyColors="#d8f4f3" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR460a4fd2" />
		<Microinstruction microRef="model.microinstruction.Shift4284f95e" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR3dbbe51f" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7100" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#cbd8f6" assemblyColors="#cbd8f6" >
		<Microinstruction microRef="model.microinstruction.Logical55b11074" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="7200" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#a4c9b3" assemblyColors="#a4c9b3" >
		<Microinstruction microRef="model.microinstruction.Logical6a4459fd" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="7400" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#a3a2d3" assemblyColors="#a3a2d3" >
		<Microinstruction microRef="model.microinstruction.CpusimSet24df7e6c" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="7800" instructionFormat="OPCODE" assemblyFormat="OPCODE" instructionColors="#e993cf" assemblyColors="#e993cf" >
		<Microinstruction microRef="model.microinstruction.CpusimSet69d1a757" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="6" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f4dd94 #c59aab" assemblyColors="#f4dd94 #c59aab" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Increment11d478ab" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess2361ca49" />
		<Microinstruction microRef="model.microinstruction.Test3177a255" />
		<Microinstruction microRef="model.microinstruction.Increment63a4005b" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="BSA" opcode="5" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a7a7cb #cebeaa" assemblyColors="#a7a7cb #cebeaa" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess32a793e2" />
		<Microinstruction microRef="model.microinstruction.Increment1dbd1443" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR61b53dd6" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="4" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#a3e8f7 #e3bbe0" assemblyColors="#a3e8f7 #e3bbe0" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR61b53dd6" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="3" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#8cb1da #e6a2c0" assemblyColors="#8cb1da #e6a2c0" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess6656849e" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="LDA" opcode="2" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#fee58c #d4e7c5" assemblyColors="#fee58c #d4e7c5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5f53ca90" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="1" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#d1bc8c #c8ed88" assemblyColors="#d1bc8c #c8ed88" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Arithmetice5ea2bf" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="0" instructionFormat="OP ADDR" assemblyFormat="OP ADDR" instructionColors="#f792e9 #dcfaa5" assemblyColors="#f792e9 #dcfaa5" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess1ec1f2dd" />
		<Microinstruction microRef="model.microinstruction.Logicalf6f13e2" />
		<Microinstruction microRef="model.microinstruction.End6bf5a952" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM7cebbe14" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->
	<ProgramCounterInfo programCounter="model.module.Register34aace85" />

</Machine>
